/* 	클래스에서의 타입변환
	타입 변환은 타입을 다른 타입으로 변환하는 것이다.
	자바에서는 다음과 같이 두 가지의 대표적인 타입 변환이 있다.
	 1. 자료형 변환
	 2. 클래스의 객체 타입 변환
	클래스의 타입 변환도 마찬가지로 자동 형 변환과 강제 형 변환이 있다.
	단, 자료형에 비해 타입 변환이 가능한 범위가 상당이 좁다.
	클래스의 타입 변환은, 서로 상속 관계에 있는 클래스 사이에서만 변환할 수 있다.
	
	클래스의 자동 타입 변환
	자료형에서의 자동 형 변환과 마찬가지로 개발자가 직접 명시하지 않아도 
	자동으로 타입 변환이 일어나는 것을 '클래스 자동 타입 변환'이라고 한다.
	클래스 자동 타입 변환은 상속 관계에 있는 자식 클래스의 객체를 
	부모 타입의 객체로 변환하는 것을 말한다.
	예)
	부모클래스명 객체명 = new 자식클래스명();
	단,이미 만들어진 자식 객체를 부모 타입으로 변환하려고 할 때는 다음과 같이 구현한다.
	 ㄴ 부모 클래스명 객체명 = 자식객체;
	
 */

package Class_casting;

class Parent{};

class Child extends Parent{};

public class class_casting {
	public static void main(String[] args) {
		Parent p1 = new Parent();// Parent 타입의 객체
		Child c1 = new Child();// Child 타입의 객체
		
		Parent p2 = new Child();//자동 타입 변환
		Parent p3 = c1;//자동 타입 변환
		
		if(p3 == c1) {
		// 객체끼리 비교할 때 ==연사자는 주소값이 같은지 비교한다.
			System.out.println("같은 객체 참조 중");
		}
		/*
		타입을 변환한다고 객체가 바뀌는게 아니라, 
		객체는 보존되고 사용만 부모 객체처럼 한다.
		자동 타입 변환은 반드시 자식 클래스의 객체를 
		부모 타입으로 변환할 때 적용할 수 있다.
		1차 상속관계가 아니더라도 상위 계층의 타입으로 변환할 수 있다.
		하지만 같은 상위 계층을 가지고 있더라도, 
		타입 변환을 시도하려는 두 클래스 간의 상속 관계가 없다면 타입 변환은 불가능하다.
		 */
	}
}
