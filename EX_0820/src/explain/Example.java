/*	열거형
	열거형은 상수를 가지고 생성되는 객체들을 한곳에 모아둔 하나의 묶음이다.
	상수를 사용자가 지정한 이름으로부터 0부터 순차적으로 증가시켜준다.(index값을 가진다)
	클래스처럼 보이게 하는 상수
	서로 관련있는 상수들끼리 모아 상수들을 정의하는것

	Enum클래스가 컴파일 될 때 자동 추가되는 메서드
	getDeclaringClass()
	name() : 열거형 상수의 이름을 문자열로 반환
	ordinal() : 열거형 상수가 정의된 순서를 반환
	valueof("상수명") : String값을 enum에서 가져온다 값이 없으면 Exception을 살생시킨다.
	valueof(Item.class, "START); : 넘겨받은 class에서 String을 찾아, enum에서 가져온다.
	values() : 열거형 상수안에 들어있는 내용들을 enum타입의 배열로 반환
	
	열거형 데이터 비교 특징
	열거형 상수간의 비교에는 ==을 사용할 수 있다.(상수의 주소를 비교)
	'<','>'와 같은 비교연산자는 사용할 수 없고 compareTo()는 사용이 가능하다.
	
	열거형에 추상메서드 추가하기
	열거형에 추상 메서들르 선언하면 각 열거형 상수가 이 추상 메서드를 반드시 구현해야 한다.
	추상클래스나 인터페이스를 가지고 추상 메서드를 구현함으로써 익명 클래스를 작성하는 것과 유사하다.
	
	어노테이션
	프로그램의 소스코드 안에 다른 프로그램을 위한 정보를 미리 약속된 형식으로 포함시킨 것
	어노테이션은 주석(comment)처럼 프로그래밍 언어에 영향을 미치지 않으면서도 
	다른 프로그램에게 유용한 정보를 제공할 수 있다는 장접이 있다.
	어노테이션의 뜻은 주석,주해,메모이다.
	
	표준 어노테이션
	자바에서 제공하는 기본어노테이션
	
	메타 어노테이션
	어노테이션을 만들기 위한 어노테이션
	스프링에서는 어노테이션으로 많이 통제한다.
	java.lang.annotaion 패키지에 정의되어 있다.
	
	
 */


package explain;

public class Example {

}
