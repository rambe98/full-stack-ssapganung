1. 요구사항 분석
2. 개념적 모델링
3. 논리적 모델링
4. 물리적 모델링
5. 구현


SQL연산자
BETWEEN : A와 B사이의 값을 조회할 때 사용
 ㄴ WHERE 컬럼명 BETWEEN A AND B
IN : OR을 대신해서 사용하는 연산자
 ㄴ IN(값,값,값)
LIKE : 유사검색 (특정 문자열을 포함하고 있는 데이터 조회)
 ㄴ WHERE 컬렴명 LIKE '형식';

테이블에 데이터 추가하기
INSERT 

INSERT INTO 테이블명(컬럼명1,컬럼명2...) VALUES (값1,값2...);
INSERT INTO 테이블명 VALUES (값1,값2...);
무조건 컬럼의 개수만큼 값을 대입해야한다.

다른 테이블의 데이터를 조회해서 추가하기
INSERT INTO 테이블명(컬럼명1,컬럼명2...) 
SELECT 컬럼1, 컬럼2... FROM 테이블
WHERE 조건;

각각의 테이블에 데이터를 추가하기
INSERT ALL
 INTO 테이블A(컬럼1, 컬럼2...) VALUES(값1, 값2...)
 INTO 테이블B(컬럼3, 컬럼4...) VALUES(값3, 값4...)
SELECT * FROM DUAL;

조회 -> 테이블에 영향이 없다.
추가 삭제 수정 -> 테이블에 영향을 준다.

DELETE
부모와 자식중 자식테이블에서 참조하는 값들을 먼저 삭제해야 한다.
ㄴ 행단위로 지운다.

DELETE FROM 테이블명 WHERE 조건식

TRUNCATE
테이블 안에 있는 데이터를 싹 다 날린다.

수정하기
UPDATE
- 테이블 데이터를 수정할 때 사용하는 키워드

UPDATE POT SET 
컬럼명 = 새로운 값
WHERE 조건식;

조건식을 달지 않으면 테이블 전체에서 데이터가 수정된다.

ORDER BY (정렬)
질의 결과에 반환되는 행들을 특정 기준으로 정렬하고자 할 때 사용
ORDER BY절은 SELECT절의 가장 마지막에 기술
ASC : 오름차순(생략가능)
DESC: 내림차순(생략불가)

FROM 테이블 명 ORERBY 컬럼명 정렬 방향;

FROM 테이블 명 조건식 ORDER BY 컬럼명 정렬 방향;

FROM 테이블 명 조건식 ORDER BY 컬럼명 정렬 방향, 컬렴명 정렬 방향;

-----------------------------------------------------------------------------
정규화
- 모델링을 잘하면서 테이블을 만들었지만 불필요한 컬럼이라던지
불필요한 요소를 걸러내는 작업이다.
- 1차~5차 까지 존재하지만 정규화를 진행할 수록 테이블을 계속 분리하기 때문에
데이터를 가져오는 작업을 할 때 분편하다.
- 그렇기 때문에 보통 3차 정규화 작업까지만 진행한다.

정규화의 이점
불필요한 데이터 반복을 제거함으로써 저장공간을 최소화할 수 있으며, 
데이터의 변경 시 데이터의 불일치성을 최소화하고, 연산작업을 최소화할 수 있다.

정규화 안된 테이블

1차 정규화(1NF) : 도메인이 원자값이어야 한다
1차 정규화를 만족하며 부분함수 종속이 해소되어야함
2차 정규화(2NF) : 부분적 함수 종속 제거(관련있는 컬럼끼리 테이블을 분리한다)
2차 정규화를 만족하며 이행함수 종속이 해소되어야함
3차 정규화(3NF) : 2차 정규화의 조건을 만족하면서 이행적 함수 종속 제거를 제거해야 한다
이행 함수 종속을 쪼개서 따로 테이블로 만든다, 하나의 컬럼이 다른 컬럼을 대표할 수 없다,.
BCNF 정규화

5차 정규화

함수적 종속성
하나의 테이블에서 한 컬럼의값(X)가 다른 컬럼의 값(Y)을 결정하는 관계를 
함수적 종속이라고 할 수 있다.
정규화가 잘된 테이블일수록 결정자 X는 PK한개이고 종속자가 여러개인 구조를 가진다.

완전함수 종속
종속자가 기본키에만 종속되며, 기본키가 여러 속성으로 구성되어 있을 경우 기본키를 구성하는
모든속성이 포함된 기본키의 부분집합에 종속된 경우를 완전함수종속이라고 한다.

부분함수 종속
테이블에서 기본키가 복합키일 경우 기본키를 구성하는 속성 중 
일부에게 종속된 경우를 부분함수 종속이라고 한다.

이행함수 종속
테이블에서 X,Y,Z라는 세개의 컬럼이 존재할 때 X->Y,Y->Z이란 종속관계가 있을 경우, 
X->Z가 성립되는것을 이행적 함수 종속이라고 한다.
위의 테이블에서 X(이름,성별) -> Y(주소), X(이름,성별) -> Z(지역번호)관계를 알았다.
그런데 Y(주소) -> Z(지역)의 관계도 성립이 된다.

이상현상(Anormally)
삽입이상 - 새 데이터를 삽입하기 위해 불필요한 데이터도 삽입해야하는 문제
갱신이상 - 일부만 변경되어 데이터가 불일치하게 되는 현상
삭제이상 - 행을 삭제할 때 필요한 데이터까지 합께 삭제되는 현상

정규화는 논리모델링을 할 때 실시한다.

SQL함수
- 사용자가 필요한 기능을 만드는 함수가 아닌, 오라클 자체적으로 제공하는 함수
- 상황에 맞는 적절한 함수를 사용하기 위해서는 
어떤 기능을 하는 함수들이 존재하는지 정확하게 파악하고 있어야 한다.

내장함수의 종류
단일행 함수 : 1개의 행값이 함수에 적용되어 1개의 행을 반환한다.
집계 함수 : 1개 이상의 행의 값이 함수에 적용되어 1개의 값을 반환한다.

문자함수
ASCII	지정된 문자의 ASCII값을 반환한다.
CHR	지정된 수치와 일치하는 ASCII코드를 반환한다.
RPAD	왼쪽 정렬 후 오른쪽에 생긴 빈공백에 특정 문자를 채워 반환한다.
LPAD	오른쪽 정렬 후 오른쪽에 생긴 빈공백에 특정 문자를 채워 반환한다.
TRIM	문자열 공백 문자들을 삭제한다.
RTRIM	문자열 오른쪽(뒤)의 공백 문자들을 삭제한다.
LTRIM	문자열 왼쪽(뒤)의 공백 문자들을 삭제한다.
LOWER	지정된 문자를 소문자로 반환한다.
UPPER	지정된 문자를 대문자로 반환한다.
INSTR	특정 문자의 위치를 반환한다.
INITCAP	지정된 문자열의 첫 단어를 대문자로 나머지는 소문자로 반환한다.
SUBSTR	시작 위치부터 선택 개수만큼 문자를 반환한다.
LENGTH	문자열의 길이를 반환한다.
REPLACE	첫 번째 파라미터로 지정한 문자를 두번째 파라미터로 지정한 문자로 바꿔준다.
CONCAT	입력되는 두 문자열을 연결하여 반환한다.


데이터 베이스의 제약 조건에 대해 전반적인 면세를 기술한 것

개념 -  전체적인 뷰
내부 - 데이터를 어디에 저장을 할 것인가
외부 -  사용자 ㅇ비장에서 어떻게 사용할 것인가

