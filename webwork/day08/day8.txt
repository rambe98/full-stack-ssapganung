fromspree는 웹사이트에서 폼 제출을 처리하는 과정을 간소화 해주는 서비스임
사용자가 제출한 데이터를 해당  url로 보낼 수 있음
데이터를 처리하여 이메일로 전달하거나 검토할 수 있도록 해줌

form태그
다른 서버와 통신하기 위해 사용하는 태그

input태그에 쓰여진 value가 서버로 넘어간다

<form action="https://formspree.io/f/{form_id}" method="post">
  <label for="email">Your Email</label>
  <input name="Email" id="email" type="email">
  <button type="submit">Submit</button>
</form>

html form
- 폼에 입력한 데이터를 웹서버로 보내고 웹 서버는 받은 데이털르 처리한다.
- 그 결과 를 사용자에게 반환하거나 데이터 베이스에 저장
- 클라이언트 측 자바스크립트로 웹 어플리케이션을 만들 때 사용자에게 
입력을 받는 사용자 인터페이스로사용한다.

폼 요소와 폼 컨트롤 요소
- 웹 서버에 데이터를 보낼 때 아래 과정을 거침

method 속성 : 데이터 전송 방법

---------------------------------------------------------------------------------------

프론트엔드 개발
사용자의 바로 앞에서 사용자와 상호작용하며 앱 로직을 수행하고
백엔드 서버로 요청을 전달하는 역할

웹 서비스에서 클라이언트 또는 프론트엔드란 웹 브라우저를 뜻함
사용자는 자신의 컴퓨터에서 브라우저를 실행함
인터넷 이용해 서버에 있는 자원(html.css)을 사용자의 컴퓨터로 다운로드 후 브라우저에서 실행시킨다.

파란책 159쪽 시작

프론트엔드 개발환경 설정
자바스크립트 라이브러리인 react.js를 이용해 프론트엔드 개발을 한다
react.js를 사용하기 위해 자바스크립트 런타임 환경을 이용한다.
node.js를 사용하면 브라우저 밖에서도 스크립트를 컴파일하고 실행할 수 있음

node.js
이전에 자바스크립트 코드는 브라우저 내에서만 실행이 가능했음
자바스크립트를 실행하기위해 브라우저상의 html렌더링의 일부로 실행하거나
개발자 창의 자바스크립트 콘솔을 이용해 실행해야했음
node.js는 자바 스크립트를 컴퓨터에서 실행할 수 있게 해주는 자바스크립트 런타임 환경이다

브라우저 밖에서도 실행할 수 있다는 건 자바 스크립트를 클라이언트 언어뿐만 아니라
서버 언어로도 사용할 수 있다는 뜻이다.
즉 자바스크립트로 서버를 만들 수 있다는 뜻이다.

우린 자바 스크립트로 된 node서버를 이용해 프론트 엔드 서버를 개발한다.
요청이 왔을 때 html.js,css를 반환하는 정도의 기능을 할거다

npm
node.js의 패키지 관리 시스템
npm을 이용해 npmjs(https://www.npmjs.com)에서 노드 의 라이브러리를 설치한다.
책에서는 16.14.2LTS버전을 사용하므로 같은버전을 사용하도록 하자

nodejs 프로젝트를 초기화 하기 위해서는 npm init을 사용한다.
우리는 npm이 아닌 npx라는 툴로 리액트 앱을 초기화할 예정이다.
npm으로 하면 일일히 설정해야하는 부분이 많기 때문이다

npm으로 프로젝트를 구성하려고 하면
패키지 이름, 버전 등등 설정해야하는 내용이 많다.
이 정보들을 다 입력하고 나면 package.json이라는 파일을 만들어줌
package.json에 프로젝트의 메타 데이터가 들어간다.

dependencies : 의존성
내가 프로젝트를 구성하는데 필요한 라이브러리를 정의하는 공간
 "react": "^18.3.1"  
version       명시된 버전과 일치
>version       명시된 version보다 높은 버전
>=version    명시된 version보다 같거나 높은 버전
< version    명시된 version보다 낮은 버전
<= version    명시된 version보다 같거나 낮은 버전
~version       명시된 version과 근사한 버전(패치한 버전 범위 내)
^version       명시된 version과 호횐되는 버전

ex) ^1.2.3 -> 내가 1.2.3버전으로 개발을 했는데 이 버전과 호환되는 최근버전으로 사용해줘

material-ui
리엑트 개발에서 쉽게 사용할 수 있는 ui  프레임 워크이다.
미리 만들어놓은 컴포넌트나 css를 사용할 수 있다.

emotion
js로 css 스타일을 작성할 수 있도록 설계된 라이브러리

렌더링의 원리

1.html코드를 파싱한다. dom 트리로 만든다.
2. image,css,script등 다운로드해야하는 리소스를 다운로드한다.
3. css도 cssom트리로 변환한다.
4.다운로드한 자바스크립트를 인터프리트, 컴파일, 파싱, 실행한다.
5.파싱을 마친후 브라우저는 렌더링에 들어간다.

spa
서버에서 다시 요청하지 않고 자바스크립트가 동적으로 html을 재구성해서 만드는 앱

csr(client side rendering)
- 서버에서 최소한의 html을 받고, 내부에 위치한 script태그로 js를 받아서
클라이언트에서 페이지를 렌더링 하는 방식
- react, vue, angular

장점
- 초기렌더링 이후에 진행되는 렌터링의 속도가 매우 빠름

단점
- 초기 구동에 필요한 파일을 전부 받아야해서 초기 페이지 구동 속도가 느림

SSR(server side rendering)
- 서버에서 사전에 렌더링된 파일을 클라이언트에게 전송하고
클라이언트는 이를 즉시 렌더링하는 방식
- 단 js의 경우 정적 리소스(html,css)가 렌더링 된 후 적용되기 때문에 js가 모두 
적용되기 전에는 조작이 불가능함

1. 사용자가 웹페이지를 방문할 경우, 서버는 이를 확인하고 브라우저에게 제공할
html컨텐츠를 컴파일 한다.
2. 컴파일된 html은 브라우저에 제공되며, 브라우저는 이를 다운로드하고 렌더링
하여 사용자가 이를 볼 수 있도록 한다.
3. 이후 JS파일을 다운로드 받은 후 실행하여 사용자와 페이지 간의
상호작용을 가능하게 함
4. 사용자가 다른 페이지로 이동할 경우, 1~3번 과정을 반복한다

- jsp, thymeleaf

reactDOM
- react는 순수 자바 스크립트고 자바스크립트를 이용해 컴포넌트를
만들어나간다.
- 실제로 브라우저가 이해할 수 있는 건 html,js,css뿐임
- jsx 문법으로 작성된 코드를 babel라이브러리가 순수 자바 스크립트로 변환하고
우리가 만든 컴포넌트를, html과 연결하는 작업을 해주는 라이브러리가 reactdom이다
----------------------------------------------------------------------------------------
정리
1. 브라우저가 어떻게 작동하는지
2. node설치 -> npm,npx를 이요하여 react프로젝트 생성
3. 애플리케이션 실행
4. react가 SPA로 어떻게 작동하는지
5. JSX가 뭔지 알아봄






















 
